{"/":{"title":"Home","data":{"":"Introducing NetAIGym (Network AI Gym), an open Simulation-as-a-Service framework to revolutionize Network AI Research and Development. NetAIGym comprises three key components, each playing a vital role in the framework:\n\n\nNetAIClient: This Python-based interface that offers researchers and developers a comprehensive development environment following the Open AI Gym/Gymnasium standards.\nIt caters to the development of both AI and non-AI algorithms, empowering users with a versatile toolkit such as Stable-Baselines3 and WanDB.\nNetAIGym API: Open API for collecting data and interacting with the simulated network environment.\nNetAIServer & NetAISim: Leverage open-source network simulation tools, e.g., ns-3; Enhance it with customized capabilities & use-cases, e.g. Traffic Steering, Network Slicing, Distributed Compute, Dynamic QoS, Energy Saving, etc.","what-is-netaigym-about-and-not-about#What is NetAIGym about and NOT about?":"","-out-of-scope#❌ Out-of-Scope":"Develop proprietary AI algorithms or models\nDevelop AI application or software, e.g. xApp/rApp, etc., based on controller architecture, e.g. O-RAN RIC, etc.\nDevelop “Digital Twin” to simulate the physical world with high fidelity","️-in-scope#✔️ In-Scope":"Develop open & reference AI models/algos for networking research (Layer 2 & above)\nDevelop abstract models, e.g. channel, compute, power, etc. for the physical world & system\nDevelop full-stack models to simulate E2E (Access/Edge/Cloud) network operation with high fidelity\n\n\n\n\n\nGet started →"}},"/docs":{"title":"Get Access","data":{"":"We have hosted NetAIServer and NetAISim on vLab machines to collaborate with MLWiNS/RINGs universities.\nUsing the provided NetAIGym Open API, a NetAIClient can establish a connection with the NetAIServer via the public internet or Intel's internal network.\nContact us to get the early access to NetAIGym.Next, we plan to launch NetAIGym Sim-aaS via Intel DevCloud and make it available for all Intel developers.\nIn the meantime, we are collaborating with the research community to enhance NetAISim with new use-cases & capabilities, e.g., 5G/O-RAN, distributed computing, RAN energy saving, predictive QoS, etc.","launch-your-first-network-ai-simulation#Launch Your First Network AI Simulation":"With the early access to NetAIGym, download the client software NetAIClient to launch your first simulation. See the NetAIClient Github Repository for more details about the client software.","when-the-netaiclient-starts#When the NetAIClient starts:":"NetAIClient sends a JSON configure file to NetAIServer to launch a ns-3 simulation.","when-the-simulation-is-running-the-following-steps-repeats#When the simulation is running, the following steps repeats:":"NetAISim collects and sends measurement metrics to NetAIServer, which forwards measurements to the NetAIClient via the NetAIGym Open API.\n(AI or non-AI) Algorithm Agent computes an action based on the measurements, and stores data in WandB.\nNetAIClient transmits the action to the NetAISim via the NetAIGym Open API. NetAISim will take the new action and continue the simulation.","when-the-netaiclientsimulation-ends#When the NetAIClient/simulation ends:":"The data stored in Wandb can be conveniently visualized on the Wandb website."}},"/showcase":{"title":"Showcase","data":{"":"Showcase\n\nOpen source projects powered by NetAIGym"}},"/docs/netaigym":{"title":"NetAIGym","data":{"":"Introducing NetAIGym (Network AI Gym), an open Simulation-as-a-Service framework to revolutionize Network AI Research and Development. NetAIGym comprises three key components, each playing a vital role in the framework:\n\n\nNetAIClient: This Python-based interface that offers researchers and developers a comprehensive development environment following the Open AI Gym/Gymnasium standards.\nIt caters to the development of both AI and non-AI algorithms, empowering users with a versatile toolkit such as Stable-Baselines3 and WanDB.\nNetAIGym API: Open API for collecting data and interacting with the simulated network environment.\nNetAIServer & NetAISim: Leverage open-source network simulation tools, e.g., ns-3; Enhance it with customized capabilities & use-cases, e.g. Traffic Steering, Network Slicing, Distributed Compute, Dynamic QoS, Energy Saving, etc.","what-is-netaigym-about-and-not-about#What is NetAIGym about and NOT about?":"","-out-of-scope#❌ Out-of-Scope":"Develop proprietary AI algorithms or models\nDevelop AI application or software, e.g. xApp/rApp, etc., based on controller architecture, e.g. O-RAN RIC, etc.\nDevelop “Digital Twin” to simulate the physical world with high fidelity","️-in-scope#✔️ In-Scope":"Develop open & reference AI models/algos for networking research (Layer 2 & above)\nDevelop abstract models, e.g. channel, compute, power, etc. for the physical world & system\nDevelop full-stack models to simulate E2E (Access/Edge/Cloud) network operation with high fidelity"}},"/docs/another":{"title":"Another","data":{"":"let a = 1;\n\nconsole.log(a);\nPython exmple\nimport numpy as np\nimport pandas as pd\n\nprint (\"hello world\")","component#Component":"","external-component#External Component":""}},"/docs/use-cases/qos-steer":{"title":"Qos Steer","data":{"":"Let me try somethinf."}},"/docs/use_cases/qos_aware_traffic_steering":{"title":"Qos Aware Traffic Steering","data":{"":"Let me try somethinf."}},"/docs/use_cases/traffic_splitting":{"title":"Traffic Splitting","data":{"":"Let me try somethinf."}},"/docs/related_work":{"title":"Related Work","data":{"":"","openai-gymgymnasium#OpenAI Gym/Gymnasium":"Gymnasium is a standard API for reinforcement learning, and a diverse collection of reference environments.","ns-3#ns-3":"ns-3 is a discrete-event network simulator for Internet systems, targeted primarily for research and educational use. ns-3 is free, open-source software, licensed under the GNU GPLv2 license, and maintained by a worldwide community.","ns-3-community#ns-3 community":"Number of publications involving ns-3: A search of the ‘ns-3 simulator’ results on https://scholar.google.com\nsince 2017 (excluding patents and citations) yields over 17,300 links (with some false positives).\nThe ACM digital library lists 11,830 publications matching the search term ‘ns-3’ (in abstract) since 2017(searched 6/15/23).\nns-3-users group: As of January 2018, there were 8183 members of the ns-3-users group. The number of posts to the ns-3-users group can be viewed at this web page. In 2017, there were approximately 700 posts/month.\nns-developers mailing list: The ns-developers mailing list is where software development discussions take place. As of January 2018, there were 1560 subscribers to this list.\nNumber of authors: As of ns-3.27 release, 220 people are listed as authors in the AUTHORS file.\nNumber of maintainers: ns-3 maintainers have responsibility and authority to oversee and maintain different portions of the codebase. As of ns-3.27 release, 23 people are listed as ns-3 maintainers.\nNumber of downloads: The project has not been maintaining counts of downloads for the past few years. In 2016 (the last year counted), ns-3 releases were downloaded approximately 72,000 times from the main web server."}},"/docs/getting_started/README":{"title":"Readme","data":{"":"The source files for the GMA module are located at contrib/gma/ folder.\nThe source files for the RMCAT (NADA) module are located at contrib/ns3-rmcat/ folder.\nThe example scripts are located at scratch/ folder.","pre-requisite#Pre-requisite":"Clone this repo.\nInstall ZeroMQ library. We only need the C library. Not the C++ one. For Linux:\n\n\napt-get install libczmq-dev\nor\napt-get install libzmq5 libzmq3-dev","option-1-launch-a-ns-3-example-script#Option 1: Launch a ns-3 example script":"Build ns-3. Please refer the official ns-3 documentation (attached in the end) for more details.\nRun the following scrip to start a NS3 simulation:\n\n\nmkdir output;\n./ns3 run scratch/scratch-simulator.cc --cwd=output","option-2-launch-ns-3-as-netaisim-workers#Option 2: Launch ns-3 as NetAISim Workers":"Setup GMA Database Server, GMA Algorithm Client and InfluxDB as described in the gma-db-server Repo. (This step is required if you want to launch the ns3 as the NetAISim worker for the GMA Database Server.)\nRun the following scrip to start multiple NetAISim Workers for the GMA database server.\nYou will be asked to input the number of workers. 5 workers will be created if no input is detected.\n\n\n\n\nPython3 start start-gmasim-workers.py\n🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴🌴","how-to-use-3rd-party-library-in-ns3-eg-prometheus#How to use 3rd party library in NS3 (e.g., prometheus)":"In summery, after installing the 3rd party package, modify the CMakeList.txt file located in the scratch folder to include the package, assuming the examples are also inside the scratch folders. The detailed steps are as follows:\nInstall Prometheus.\nClone and build prometheus-cpp server/client that write/read to/from Prometheus database.\nChange the IP and Port # for the server_sample, e.g., Exposer exposer{\"10.23.36.169:9090\"};\nThe executables are located at ./_build/bin/ folder.\nFollow the Packaging section to create a .deb file and install it.\nCheck if the packet is installed by apt list --installed | grep prometheus-cpp\n\n\nModify the ns-3's CMakeLists.txt located in the scratch folder (assume the example scripts are inside the scratch folder):\nadd find_package(prometheus-cpp CONFIG REQUIRED)\nadd prometheus-cpp::pull to the target_link_libraries\n\n\nEnjoy !!!"}},"/docs/getting_started/testing":{"title":"Testing","data":{"":"Let me try somethinf."}},"/docs/getting_started/step1":{"title":"Step One","data":{"":"We have hosted NetAIServer and NetAISim on vLab machines to collaborate with MLWiNS/RINGs universities. Using the provided NetAIGym Open API, a NetAIClient can establish a connection with the NetAIServer via the public internet or Intel's internal network.  Next, we plan to launch NetAIGym Sim-aaS via Intel DevCloud and make it available for all Intel developers. In the meantime, we are collaborating with the research community to enhance NetAISim with new use-cases & capabilities, e.g., 5G/O-RAN, distributed computing, RAN energy saving, predictive QoS, etc."}},"/docs/getting_started/step2":{"title":"Step Two","data":{"":"Let me try somethinf."}},"/docs/installation/prerequisites":{"title":"Prerequisites","data":{"":"","netaigym-early-access--alpha-testing#NetAIGym Early Access (🟡 Alpha Testing)":"We have hosted NetAIServer and NetAISim on vLab machines to collaborate with MLWiNS/RINGs universities.\nUsing the provided NetAIGym Open API, a NetAIClient can establish a connection with the NetAIServer via the public internet or Intel's internal network.\nContact us to get the early access to NetAIGym.Next, we plan to launch NetAIGym Sim-aaS via Intel DevCloud and make it available for all Intel developers.\nIn the meantime, we are collaborating with the research community to enhance NetAISim with new use-cases & capabilities, e.g., 5G/O-RAN, distributed computing, RAN energy saving, predictive QoS, etc.","start-your-first-network-ai-simulation#Start Your First Network AI Simulation":"After the early access to NetAIGym is granted. You can download the NetAIClient to launch your first simulation. See the NetAIClient Github Repository for more information about configuring the client software.\nA simulation run can be described by the following Five steps.","when-the-netaiclient-starts#When the NetAIClient starts:":"NetAIClient sends a JSON configure file to NetAIServer to launch a ns-3 simulation.","when-the-simulation-is-running-the-following-steps-repeats#When the simulation is running, the following steps repeats:":"NetAISim collects and sends measurement metrics to NetAIServer, which forwards measurements to the NetAIClient via the NetAIGym Open API.\n(AI or non-AI) Algorithm Agent computes an action based on the measurements, and stores data in WandB.\nNetAIClient transmits the action to the NetAISim via the NetAIGym Open API. NetAISim will continue the simulation with the new action.","when-the-simulation-stops#When the simulation stops:":"The measurement history can be visualized via the WanDB website."}},"/docs/installation/step2":{"title":"Step Two","data":{"":"Let me try somethinf."}},"/docs/installation/netaigym_api":{"title":"NetAIGym API","data":{"":"The NetAIGym Open API now support Ten measurement metrics and Three use cases.","a-list-of-supported-measurement-metrics#A List of Supported Measurement Metrics":"Measurement\tUnit\tDescription\tmax_rate\tmbps\tLTE/Wi-Fi link capacity measured by each user\tload\tmbps\tInput traffic throughput measured by each user\trate\tmbps\tOutput traffic throughput measured by each user, including LTE, Wi-Fi, and ALL\tqos_rate\tmbps\tOutput traffic throughput that meet the QoS requirement measured by each user, including LTE, Wi-Fi, and ALL\towd\tms\tOne-way delay measured by each user, including LTE, Wi-Fi, and ALL\ttsu\t\tThe traffic split ratio measured by each user, including LTE, Wi-Fi\tap_id\t\tThe access-point/cell ID measured by each user, including LTE and Wi-Fi\tslice_id\t\tLTE slice ID measured by each user\trb_usage\t%\tLTE resource block usage percentage (%) measured by each user\tdelay_violation\t%\tPacket One-way delay violation percentage (%) measured by each user","a-list-of-supported-use-cases-and-actions#A List of Supported Use Cases and Actions":"Use-Case\tAction\tDescription\tMulti-Access (MX) Traffic Splitting\tTraffic Splitting\tupdate traffic split ratio of a flow over Wi-Fi and LTE\tQoS-aware MX Traffic Steering\tTraffic Steering\tsteer traffic over Wi-Fi or LTE for a flow\tCellular RAN Slicing\tResource Allocation\tupdate LTE resource block allocation ratio for a slice"}},"/docs/installation/early_access":{"title":"Early Access","data":{"":"We have hosted NetAIServer and NetAISim on vLab machines to collaborate with MLWiNS/RINGs universities.\nUsing the provided NetAIGym Open API, a NetAIClient can establish a connection with the NetAIServer via the public internet or Intel's internal network.\nContact us to get the early access to NetAIGym.Next, we plan to launch NetAIGym Sim-aaS via Intel DevCloud and make it available for all Intel developers.\nIn the meantime, we are collaborating with the research community to enhance NetAISim with new use-cases & capabilities, e.g., 5G/O-RAN, distributed computing, RAN energy saving, predictive QoS, etc.","start-your-first-network-ai-simulation#Start Your First Network AI Simulation":"With the early access to NetAIGym, download the client software NetAIClient to launch your first simulation. See the NetAIClient Github Repository for more details about the client software.","when-the-netaiclient-starts#When the NetAIClient starts:":"NetAIClient sends a JSON configure file to NetAIServer to launch a ns-3 simulation.","when-the-simulation-is-running-the-following-steps-repeats#When the simulation is running, the following steps repeats:":"NetAISim collects and sends measurement metrics to NetAIServer, which forwards measurements to the NetAIClient via the NetAIGym Open API.\n(AI or non-AI) Algorithm Agent computes an action based on the measurements, and stores data in WandB.\nNetAIClient transmits the action to the NetAISim via the NetAIGym Open API. NetAISim will take the new action and continue the simulation.","when-the-netaiclientsimulation-ends#When the NetAIClient/simulation ends:":"The data stored in Wandb can be conveniently visualized on the Wandb website."}},"/docs/use_cases/cellular_ran_slicing":{"title":"Cellular Ran Slicing","data":{"":"Let me try somethinf."}},"/docs/use_cases/mx_traffic_splitting":{"title":"Multi-Access(MX) Traffic Splitting","data":{"":"Let me try somethinf."}},"/docs/installation/netaigym_open_api":{"title":"NetAIGym Open API","data":{"":"The NetAIGym Open API now support Ten measurement metrics and Three use cases.","use-cases-and-actions#Use Cases and Actions":"Use-Case\tAction\tDescription\tMulti-Access (MX) Traffic Splitting\tTraffic Splitting\tupdate traffic split ratio of a flow over Wi-Fi and LTE\tQoS-aware MX Traffic Steering\tTraffic Steering\tsteer traffic over Wi-Fi or LTE for a flow\tCellular RAN Slicing\tResource Allocation\tupdate LTE resource block allocation ratio for a slice","measurement-metrics#Measurement Metrics":"Measurement\tUnit\tDescription\tmax_rate\tmbps\tLTE/Wi-Fi link capacity measured by each user\tload\tmbps\tInput traffic throughput measured by each user\trate\tmbps\tOutput traffic throughput measured by each user, including LTE, Wi-Fi, and ALL\tqos_rate\tmbps\tOutput traffic throughput that meet the QoS requirement measured by each user, including LTE, Wi-Fi, and ALL\towd\tms\tOne-way delay measured by each user, including LTE, Wi-Fi, and ALL\ttsu\t\tThe traffic split ratio measured by each user, including LTE, Wi-Fi\tap_id\t\tThe access-point/cell ID measured by each user, including LTE and Wi-Fi\tslice_id\t\tLTE slice ID measured by each user\trb_usage\t%\tLTE resource block usage percentage (%) measured by each user\tdelay_violation\t%\tPacket One-way delay violation percentage (%) measured by each user","network-configuration-parameters#Network Configuration Parameters":""}},"/docs/network_ai_use_cases/mx_traffic_splitting":{"title":"Multi-Access(MX) Traffic Splitting","data":{"":"","network-topology#Network Topology":"","configuration#Configuration":"","performance-metrics#Performance Metrics":"","how-to-coonfigure-and-run-your-example#How to coonfigure and run your example":"","how-to-build-your-own-reward-and-states#how to build your own reward and states":""}},"/docs/network_ai_use_cases/qos_aware_mx_traffic_steering":{"title":"QoS-aware MX Traffic Steering","data":{"":"Let me try somethinf."}},"/references":{"title":"References","data":{"":"","openai-gymgymnasium#OpenAI Gym/Gymnasium":"Gymnasium is a standard API for reinforcement learning, and a diverse collection of reference environments.","ns-3#ns-3":"ns-3 is a discrete-event network simulator for Internet systems, targeted primarily for research and educational use. ns-3 is free, open-source software, licensed under the GNU GPLv2 license, and maintained by a worldwide community.","ns-3-community#ns-3 community":"Number of publications involving ns-3: A search of the ‘ns-3 simulator’ results on https://scholar.google.com\nsince 2017 (excluding patents and citations) yields over 17,300 links (with some false positives).\nThe ACM digital library lists 11,830 publications matching the search term ‘ns-3’ (in abstract) since 2017(searched 6/15/23).\nns-3-users group: As of January 2018, there were 8183 members of the ns-3-users group. The number of posts to the ns-3-users group can be viewed at this web page. In 2017, there were approximately 700 posts/month.\nns-developers mailing list: The ns-developers mailing list is where software development discussions take place. As of January 2018, there were 1560 subscribers to this list.\nNumber of authors: As of ns-3.27 release, 220 people are listed as authors in the AUTHORS file.\nNumber of maintainers: ns-3 maintainers have responsibility and authority to oversee and maintain different portions of the codebase. As of ns-3.27 release, 23 people are listed as ns-3 maintainers.\nNumber of downloads: The project has not been maintaining counts of downloads for the past few years. In 2016 (the last year counted), ns-3 releases were downloaded approximately 72,000 times from the main web server."}},"/references/references":{"title":"References","data":{"":"","openai-gymgymnasium#OpenAI Gym/Gymnasium":"Gymnasium is a standard API for reinforcement learning, and a diverse collection of reference environments.","ns-3#ns-3":"ns-3 is a discrete-event network simulator for Internet systems, targeted primarily for research and educational use. ns-3 is free, open-source software, licensed under the GNU GPLv2 license, and maintained by a worldwide community.","ns-3-community#ns-3 community":"Number of publications involving ns-3: A search of the ‘ns-3 simulator’ results on https://scholar.google.com\nsince 2017 (excluding patents and citations) yields over 17,300 links (with some false positives).\nThe ACM digital library lists 11,830 publications matching the search term ‘ns-3’ (in abstract) since 2017(searched 6/15/23).\nns-3-users group: As of January 2018, there were 8183 members of the ns-3-users group. The number of posts to the ns-3-users group can be viewed at this web page. In 2017, there were approximately 700 posts/month.\nns-developers mailing list: The ns-developers mailing list is where software development discussions take place. As of January 2018, there were 1560 subscribers to this list.\nNumber of authors: As of ns-3.27 release, 220 people are listed as authors in the AUTHORS file.\nNumber of maintainers: ns-3 maintainers have responsibility and authority to oversee and maintain different portions of the codebase. As of ns-3.27 release, 23 people are listed as ns-3 maintainers.\nNumber of downloads: The project has not been maintaining counts of downloads for the past few years. In 2016 (the last year counted), ns-3 releases were downloaded approximately 72,000 times from the main web server."}},"/references/gymnasium":{"title":"Gymnasium","data":{"":"Gymnasium is a standard API for reinforcement learning, and a diverse collection of reference environments."}},"/references/ns-3":{"title":"Ns 3","data":{"":"ns-3 is a discrete-event network simulator for Internet systems, targeted primarily for research and educational use. ns-3 is free, open-source software, licensed under the GNU GPLv2 license, and maintained by a worldwide community.","ns-3-community#ns-3 community":"Number of publications involving ns-3: A search of the ‘ns-3 simulator’ results on https://scholar.google.com\nsince 2017 (excluding patents and citations) yields over 17,300 links (with some false positives).\nThe ACM digital library lists 11,830 publications matching the search term ‘ns-3’ (in abstract) since 2017(searched 6/15/23).\nns-3-users group: As of January 2018, there were 8183 members of the ns-3-users group. The number of posts to the ns-3-users group can be viewed at this web page. In 2017, there were approximately 700 posts/month.\nns-developers mailing list: The ns-developers mailing list is where software development discussions take place. As of January 2018, there were 1560 subscribers to this list.\nNumber of authors: As of ns-3.27 release, 220 people are listed as authors in the AUTHORS file.\nNumber of maintainers: ns-3 maintainers have responsibility and authority to oversee and maintain different portions of the codebase. As of ns-3.27 release, 23 people are listed as ns-3 maintainers.\nNumber of downloads: The project has not been maintaining counts of downloads for the past few years. In 2016 (the last year counted), ns-3 releases were downloaded approximately 72,000 times from the main web server."}},"/references/ns3":{"title":"ns-3","data":{"":"ns-3 is a discrete-event network simulator for Internet systems, targeted primarily for research and educational use. ns-3 is free, open-source software, licensed under the GNU GPLv2 license, and maintained by a worldwide community.","ns-3-community#ns-3 community":"Number of publications involving ns-3: A search of the ‘ns-3 simulator’ results on https://scholar.google.com\nsince 2017 (excluding patents and citations) yields over 17,300 links (with some false positives).\nThe ACM digital library lists 11,830 publications matching the search term ‘ns-3’ (in abstract) since 2017(searched 6/15/23).\nns-3-users group: As of January 2018, there were 8183 members of the ns-3-users group. The number of posts to the ns-3-users group can be viewed at this web page. In 2017, there were approximately 700 posts/month.\nns-developers mailing list: The ns-developers mailing list is where software development discussions take place. As of January 2018, there were 1560 subscribers to this list.\nNumber of authors: As of ns-3.27 release, 220 people are listed as authors in the AUTHORS file.\nNumber of maintainers: ns-3 maintainers have responsibility and authority to oversee and maintain different portions of the codebase. As of ns-3.27 release, 23 people are listed as ns-3 maintainers.\nNumber of downloads: The project has not been maintaining counts of downloads for the past few years. In 2016 (the last year counted), ns-3 releases were downloaded approximately 72,000 times from the main web server."}},"/references/stable_baselines_3":{"title":"Stable-Baselines3","data":{"":"Stable Baselines3 (SB3) is a set of reliable implementations of reinforcement learning algorithms in PyTorch. It is the next major version of Stable Baselines.Github repository: https://github.com/DLR-RM/stable-baselines3Paper: https://jmlr.org/papers/volume22/20-1364/20-1364.pdfRL Baselines3 Zoo (training framework for SB3): https://github.com/DLR-RM/rl-baselines3-zooRL Baselines3 Zoo provides a collection of pre-trained agents, scripts for training, evaluating agents, tuning hyperparameters, plotting results and recording videos.SB3 Contrib (experimental RL code, latest algorithms): https://github.com/Stable-Baselines-Team/stable-baselines3-contrib"}},"/references/zeromq":{"title":"ZeroMQ","data":{"":"ZeroMQ (also spelled ØMQ, 0MQ or ZMQ) is a high-performance asynchronous messaging library, aimed at use in distributed or concurrent applications. It provides a message queue, but unlike message-oriented middleware, a ZeroMQ system can run without a dedicated message broker.ZeroMQ supports common messaging patterns (pub/sub, request/reply, client/server and others) over a variety of transports (TCP, in-process, inter-process, multicast, WebSocket and more), making inter-process messaging as simple as inter-thread messaging. This keeps your code clear, modular and extremely easy to scale.ZeroMQ is developed by a large community of contributors. There are third-party bindings for many popular programming languages and native ports for C# and Java."}},"/news":{"title":"News","data":{"":"News\n\nStay tuned for NetAIGym's news update."}},"/why":{"title":"Index","data":{"":"","network-ai-developer-challenges-why-netaigym#Network AI Developer Challenges (Why NetAIGym?)":"real-world dataset controlled by network operator, difficult to acquire, not aligned with specific usage or requirement.\ndataset by itself not enough, also need environment to train/test AI models, e.g. Reinforcement Learning, etc.\nnetwork simulation tools (e.g., ns3, etc.) often very complex and difficult to use, especially for Network AI researcher & developer.\n\n⚠️Gap: lack of common simulation environment with simple APIs to develop, evaluate, and benchmark Network AI models & algorithms."}},"/why/why":{"title":"Why","data":{"":"","network-ai-developer-challenges-why-netaigym#Network AI Developer Challenges (Why NetAIGym?)":"real-world dataset controlled by network operator, difficult to acquire, not aligned with specific usage or requirement.\ndataset by itself not enough, also need environment to train/test AI models, e.g. Reinforcement Learning, etc.\nnetwork simulation tools (e.g., ns3, etc.) often very complex and difficult to use, especially for Network AI researcher & developer.\n\n⚠️Gap: lack of common simulation environment with simple APIs to develop, evaluate, and benchmark Network AI models & algorithms."}},"/why/where_is_data":{"title":"Where Is Data","data":{"":"","network-ai-developer-challenges-why-netaigym#Network AI Developer Challenges (Why NetAIGym?)":"real-world dataset controlled by network operator, difficult to acquire, not aligned with specific usage or requirement.\ndataset by itself not enough, also need environment to train/test AI models, e.g. Reinforcement Learning, etc.\nnetwork simulation tools (e.g., ns3, etc.) often very complex and difficult to use, especially for Network AI researcher & developer.\n\n⚠️Gap: lack of common simulation environment with simple APIs to develop, evaluate, and benchmark Network AI models & algorithms."}},"/docs/netaigym_open_api":{"title":"NetAIGym Open API","data":{"":"The NetAIGym Open API now support Three use cases and Ten measurement metrics.","use-cases-and-actions#Use Cases and Actions":"Use-Case\tAction\tDescription\tMulti-Access (MX) Traffic Splitting\tTraffic Splitting\tupdate traffic split ratio of a flow over Wi-Fi and LTE\tQoS-aware MX Traffic Steering\tTraffic Steering\tsteer traffic over Wi-Fi or LTE for a flow\tCellular RAN Slicing\tResource Allocation\tupdate LTE resource block allocation ratio for a slice","measurement-metrics#Measurement Metrics":"Measurement\tUnit\tDescription\tmax_rate\tmbps\tLTE/Wi-Fi link capacity measured by each user\tload\tmbps\tinput traffic throughput measured by each user\trate\tmbps\toutput traffic throughput measured by each user, including LTE, Wi-Fi, and ALL\tqos_rate\tmbps\toutput traffic throughput that meet the QoS requirement measured by each user, including LTE, Wi-Fi, and ALL\towd\tms\tone-way delay measured by each user, including LTE, Wi-Fi, and ALL\ttsu\t\ttraffic split ratio measured by each user, including LTE, Wi-Fi\tap_id\t\taccess-point/cell ID measured by each user, including LTE and Wi-Fi\tslice_id\t\tLTE slice ID measured by each user\trb_usage\t%\tLTE resource block usage percentage (%) measured by each user\tdelay_violation\t%\tpacket One-way delay violation percentage (%) measured by each user","network-configuration-parameters#Network Configuration Parameters":"Some of the parameters may only apply to subset of the use cases. e.g., slice_list is only applicable to Cellular RAN Slicing use case.\nParameter\tDescription\tsimulation_time_s\tsimulation time in seconds"}},"/index-old":{"title":"Index Old","data":{"":"NetAIGym (Network AI Gym):\n\n\nDemocratizing Network AI Research & Development  via Simulation-as-a-Service.\n\n\nGet started →"}},"/docs/index-template":{"title":"Index Template","data":{"":"NetAIGym (Network AI Gym):\n\n\nDemocratizing Network AI Research & Development  via Simulation-as-a-Service.\n\n\nGet started →"}},"/docs/network_ai_use_cases/cellular_ran_slicing":{"title":"Cellular RAN Slicing","data":{"":"Let me try somethinf."}}}