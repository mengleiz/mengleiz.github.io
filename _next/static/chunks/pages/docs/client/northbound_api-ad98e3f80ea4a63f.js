(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6341],{2452:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/client/northbound_api",function(){return n(5994)}])},6408:function(e,t,n){"use strict";var s=n(1527);n(959);let r={logo:(0,s.jsx)("span",{children:"NetAIGym"}),project:{link:"https://github.com/pinyaras/GMAClient"},chat:{link:"https://netai-gym.slack.com",icon:(0,s.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20",fill:"currentColor",viewBox:"0 0 16 16",children:(0,s.jsx)("path",{d:"M3.362 10.11c0 .926-.756 1.681-1.681 1.681S0 11.036 0 10.111C0 9.186.756 8.43 1.68 8.43h1.682v1.68zm.846 0c0-.924.756-1.68 1.681-1.68s1.681.756 1.681 1.68v4.21c0 .924-.756 1.68-1.68 1.68a1.685 1.685 0 0 1-1.682-1.68v-4.21zM5.89 3.362c-.926 0-1.682-.756-1.682-1.681S4.964 0 5.89 0s1.68.756 1.68 1.68v1.682H5.89zm0 .846c.924 0 1.68.756 1.68 1.681S6.814 7.57 5.89 7.57H1.68C.757 7.57 0 6.814 0 5.89c0-.926.756-1.682 1.68-1.682h4.21zm6.749 1.682c0-.926.755-1.682 1.68-1.682.925 0 1.681.756 1.681 1.681s-.756 1.681-1.68 1.681h-1.681V5.89zm-.848 0c0 .924-.755 1.68-1.68 1.68A1.685 1.685 0 0 1 8.43 5.89V1.68C8.43.757 9.186 0 10.11 0c.926 0 1.681.756 1.681 1.68v4.21zm-1.681 6.748c.926 0 1.682.756 1.682 1.681S11.036 16 10.11 16s-1.681-.756-1.681-1.68v-1.682h1.68zm0-.847c-.924 0-1.68-.755-1.68-1.68 0-.925.756-1.681 1.68-1.681h4.21c.924 0 1.68.756 1.68 1.68 0 .926-.756 1.681-1.68 1.681h-4.21z"})})},docsRepositoryBase:"https://github.com/intel-sandbox/netai-gym-website/tree/main/webpage/",footer:{text:"Intel Labs | Multi-Access Intelligence"},useNextSeoProps:()=>({titleTemplate:"%s"})};t.Z=r},5994:function(e,t,n){"use strict";n.r(t);var s=n(1527),r=n(9170),i=n(7059),a=n(6408);n(8143);var d=n(6736);n(6484);let l={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,d.ah)(),e.components);return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)},pageOpts:{filePath:"pages/docs/client/northbound_api.mdx",route:"/docs/client/northbound_api",headings:[{depth:1,value:"northbound API",id:"northbound-api"},{depth:3,value:"class netaigym.client.northbound_api",id:"class-netaigymclientnorthbound_api"},{depth:2,value:"Methods",id:"methods"},{depth:2,value:"Attributes",id:"attributes"}],timestamp:1689027236e3,pageMap:[{kind:"Meta",data:{index:{title:"Home",type:"page"},news:{title:"News",type:"page",theme:{typesetting:"article",layout:"full"}},why:{title:"Why",type:"page"},docs:{title:"Documentation",type:"page"},references:{title:"References",type:"page"},contact:{title:"Contact â†—",type:"page",href:"mailto:netaigym@gmail.com",newWindow:!0}}},{kind:"Folder",name:"docs",route:"/docs",children:[{kind:"Meta",data:{index:"Guide","-- API":{type:"separator",title:"API"},overview:"Overview",agent:"Agent",client:"Client",server:"Server",env:"Env","-- Environments":{type:"separator",title:"Environments"},environments:"Environments Overview",mx:"Multi-Access(MX) Traffic Management",cellular_ran_slicing:"Cellular RAN Slicing","-- More":{type:"separator",title:"More"},backup:"Backup"}},{kind:"MdxPage",name:"agent",route:"/docs/agent"},{kind:"MdxPage",name:"backup",route:"/docs/backup"},{kind:"MdxPage",name:"cellular_ran_slicing",route:"/docs/cellular_ran_slicing"},{kind:"Folder",name:"client",route:"/docs/client",children:[{kind:"MdxPage",name:"adapter",route:"/docs/client/adapter"},{kind:"MdxPage",name:"northbound_api",route:"/docs/client/northbound_api"},{kind:"Meta",data:{adapter:"Adapter",northbound_api:"Northbound API"}}]},{kind:"MdxPage",name:"client",route:"/docs/client"},{kind:"Folder",name:"env",route:"/docs/env",children:[{kind:"Meta",data:{southbound_api:"Southbound API",simulator:"Simulator"}},{kind:"MdxPage",name:"simulator",route:"/docs/env/simulator"},{kind:"MdxPage",name:"southbound_api",route:"/docs/env/southbound_api"}]},{kind:"MdxPage",name:"env",route:"/docs/env"},{kind:"MdxPage",name:"environments",route:"/docs/environments"},{kind:"MdxPage",name:"index",route:"/docs"},{kind:"Folder",name:"mx",route:"/docs/mx",children:[{kind:"Meta",data:{mx_traffic_splitting:"Multi-Access(MX) Traffic Splitting",qos_aware_mx_traffic_steering:"QoS-aware MX Traffic Steering"}},{kind:"MdxPage",name:"mx_traffic_splitting",route:"/docs/mx/mx_traffic_splitting"},{kind:"MdxPage",name:"qos_aware_mx_traffic_steering",route:"/docs/mx/qos_aware_mx_traffic_steering"}]},{kind:"MdxPage",name:"overview",route:"/docs/overview"},{kind:"MdxPage",name:"server",route:"/docs/server"}]},{kind:"MdxPage",name:"index",route:"/"},{kind:"MdxPage",name:"news",route:"/news"},{kind:"Folder",name:"references",route:"/references",children:[{kind:"Meta",data:{ns3:"ns-3",gymnasium:"Gymnasium",stable_baselines_3:"Stable-Baselines3",zeromq:"ZeroMQ"}},{kind:"MdxPage",name:"gymnasium",route:"/references/gymnasium"},{kind:"MdxPage",name:"ns3",route:"/references/ns3"},{kind:"MdxPage",name:"stable_baselines_3",route:"/references/stable_baselines_3"},{kind:"MdxPage",name:"zeromq",route:"/references/zeromq"}]},{kind:"Folder",name:"why",route:"/why",children:[{kind:"MdxPage",name:"where_is_data",route:"/why/where_is_data"},{kind:"Meta",data:{where_is_data:"Where Is Data"}}]}],flexsearch:{codeblocks:!0},title:"northbound API"},pageNextRoute:"/docs/client/northbound_api",nextraLayout:i.ZP,themeConfig:a.Z};function o(e){let t=Object.assign({h1:"h1",h3:"h3",code:"code",p:"p",h2:"h2",pre:"pre",span:"span",blockquote:"blockquote",hr:"hr",details:"details",summary:"summary",a:"a",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,d.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{children:"northbound API"}),"\n",(0,s.jsx)(t.h3,{id:"class-netaigymclientnorthbound_api",children:(0,s.jsx)(t.code,{children:"class netaigym.client.northbound_api"})}),"\n",(0,s.jsx)(t.p,{children:"The northbound_api connects the client to the server, configure the environment parameters, communicate network stats and policy between client and netaigym envrionment."}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.pre,{"data-language":"python","data-theme":"default",filename:"Method",children:(0,s.jsx)(t.code,{"data-language":"python","data-theme":"default",children:(0,s.jsxs)(t.span,{className:"line",children:[(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"netaigym"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"client"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"northbound_api"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-function)"},children:"connect"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"(self)"})]})})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"Connect to the netaigym environment via netaigym server."}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.pre,{"data-language":"python","data-theme":"default",filename:"Method",children:(0,s.jsx)(t.code,{"data-language":"python","data-theme":"default",children:(0,s.jsxs)(t.span,{className:"line",children:[(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"netaigym"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"client"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"northbound_api"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-function)"},children:"send"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"(self, policy: JSON)"})]})})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"Send the policy to the netaigym envrionment."}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.pre,{"data-language":"python","data-theme":"default",filename:"Method",children:(0,s.jsx)(t.code,{"data-language":"python","data-theme":"default",children:(0,s.jsxs)(t.span,{className:"line",children:[(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"netaigym"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"client"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"northbound_api"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-function)"},children:"recv"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"(self)"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" -> network_stats"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" list"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"["}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"pandas"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"DataFrame"}),(0,s.jsx)(t.span,{style:{color:"var(--shiki-token-punctuation)"},children:"]"})]})})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"Receive the network stats from the netaigym environment."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"attributes",children:"Attributes"}),"\n",(0,s.jsxs)(t.details,{children:[(0,s.jsx)(t.summary,{children:"Network Environment Simulation Parameters"}),(0,s.jsxs)(t.p,{children:["Prior to initiating a simulation for a network environment, the network environment parameters, denoted as ",(0,s.jsx)(t.code,{children:'"gmasim_config"'}),", can be customized using JSON files.\nFor instance, the ",(0,s.jsx)(t.a,{href:"https://github.com/pinyaras/GMAClient/blob/main/nqos_split/nqos_split_config.json",children:"nqos_split_config.json"})," file is utilized to configure the nqos_split environment.\nIt's important to note that certain parameters may only be relevant to specific subsets of environments.\nFor example, the parameter ",(0,s.jsx)(t.code,{children:'"slice_list"'})," is exclusively applicable to the Cellular RAN Slicing environment."]}),(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"simulation_time_s"}),(0,s.jsx)(t.td,{children:"simulation time in seconds"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"random_run"}),(0,s.jsx)(t.td,{children:"change the random seed for this simulation"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"downlink"}),(0,s.jsx)(t.td,{children:"set to true to simulate downlink data flow, set to false to simulate uplink data flow"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"max_wait_time_for_action_ms"}),(0,s.jsx)(t.td,{children:"the max time the netaisim worker will wait for an action. set to -1 will cap the wait time to 100 seconds."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"enb_locations"}),(0,s.jsx)(t.td,{children:"x, y and z locations of the base station, we support 1 base station only"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"ap_locations"}),(0,s.jsx)(t.td,{children:"x, y and z location of the Wi-Fi access point, add or remove element in this list to increase or reduce AP number. We support no AP as well"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"num_users"}),(0,s.jsx)(t.td,{children:"the number of users"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"slice_list"}),(0,s.jsx)(t.td,{children:"network slicing environment only, resouce block group (rbg) size maybe 1, 2, 3 or 4, it depends on the resource block num, see table 7.1.6.1-1 of 36.213"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"user_left_right_speed_m/s"}),(0,s.jsx)(t.td,{children:"user speed (m/s). Users only move to left or right. When a user reaches the doundry, it reverse the direction"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"user_location_range"}),(0,s.jsx)(t.td,{children:"initially, users will be randomly deployed within this x, y range. if user_left_right_speed_m > 0, the user will move left and right within this boundary"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"app_and_measurement_start_time_ms"}),(0,s.jsx)(t.td,{children:"when the application starts traffic and send measurement to RL agent"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"transport_protocol"}),(0,s.jsx)(t.td,{children:"tcp or udp"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"min_udp_rate_per_user_mbps"}),(0,s.jsx)(t.td,{children:'if "transport_protocol" is "udp", this para controls the min sending rate'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"max_udp_rate_per_user_mbps"}),(0,s.jsx)(t.td,{children:'if "transport_protocol" is "udp", this para controls the max sending rate'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"qos_requirement:test_duration_ms"}),(0,s.jsx)(t.td,{children:"duration for qos testing"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"qos_requirement:delay_bound_ms"}),(0,s.jsx)(t.td,{children:"max delay for qos flow"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"qos_requirement:delay_violation_target"}),(0,s.jsx)(t.td,{children:"delay violation target for qos flow"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"qos_requirement:loss_target"}),(0,s.jsx)(t.td,{children:"loss target for qos flow"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GMA:downlink_mode"}),(0,s.jsx)(t.td,{children:'"auto", "split", or "steer". "auto" will config UDP and TCP ACK as steer and TCP data as split'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GMA:uplink_mode"}),(0,s.jsx)(t.td,{children:'"auto", "split", or "steer". "auto" will config UDP and TCP ACK as steer and TCP data as split'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GMA:measurement_interval_ms"}),(0,s.jsx)(t.td,{children:"duration of a measurement interval for GMA"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GMA:measurement_guard_interval_ms"}),(0,s.jsx)(t.td,{children:"gap between 2 measurement interval for GMA"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GMA:respond_action_after_measurement"}),(0,s.jsx)(t.td,{children:"whether to response action after receiving measurement, do not change it"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Wi-Fi:ap_share_same_band"}),(0,s.jsx)(t.td,{children:"set to true, ap will share the same frequency band"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Wi-Fi:measurement_interval_ms"}),(0,s.jsx)(t.td,{children:"duration of a measurement interval for Wi-Fi"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Wi-Fi:measurement_guard_interval_ms"}),(0,s.jsx)(t.td,{children:"gap between 2 measurement interval for Wi-Fi"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"LTE:qos_aware_scheduler"}),(0,s.jsx)(t.td,{children:"qos_steer environment only, set to true to enable qos aware scheduler for LTE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"LTE:resource_block_num"}),(0,s.jsx)(t.td,{children:"number of resouce blocks for LTE, 25 for 5 MHZ, 50 for 10 MHZ, 75 for 15 MHZ and 100 for 20 MHZ"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"LTE:measurement_interval_ms"}),(0,s.jsx)(t.td,{children:"duration of a measurement interval for LTE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"LTE:measurement_guard_interval_ms"}),(0,s.jsx)(t.td,{children:"gap between 2 measurement interval for LTE"})]})]})]})]}),"\n",(0,s.jsxs)(t.details,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.summary,{children:"Network Stats"}),"\nAt the end of each measurement interval, the netaigym API communicates the following ",(0,s.jsx)(t.a,{href:"https://github.com/IntelLabs/gma/tree/master/netai_gym",children:"networks stats measurement"})," to the client.\nThe client will use the adapter to transform these measurements into observations and rewards."]}),(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Measurement"}),(0,s.jsx)(t.th,{children:"Unit"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"max_rate"}),(0,s.jsx)(t.td,{children:"mbps"}),(0,s.jsx)(t.td,{children:"LTE/Wi-Fi link capacity measured by each user"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"load"}),(0,s.jsx)(t.td,{children:"mbps"}),(0,s.jsx)(t.td,{children:"input traffic throughput measured by each user"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"rate"}),(0,s.jsx)(t.td,{children:"mbps"}),(0,s.jsx)(t.td,{children:"output traffic throughput measured by each user, including LTE, Wi-Fi, and ALL"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"qos_rate"}),(0,s.jsx)(t.td,{children:"mbps"}),(0,s.jsx)(t.td,{children:"output traffic throughput that meet the QoS requirement measured by each user, including LTE, Wi-Fi, and ALL"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"owd"}),(0,s.jsx)(t.td,{children:"ms"}),(0,s.jsx)(t.td,{children:"one-way delay measured by each user, including LTE, Wi-Fi, and ALL"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"tsu"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"traffic split ratio measured by each user, including LTE, Wi-Fi"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"ap_id"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"access-point/cell ID measured by each user, including LTE and Wi-Fi"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"slice_id"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"LTE slice ID measured by each user"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"rb_usage"}),(0,s.jsx)(t.td,{children:"%"}),(0,s.jsx)(t.td,{children:"LTE resource block usage percentage (%) measured by each user"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"delay_violation"}),(0,s.jsx)(t.td,{children:"%"}),(0,s.jsx)(t.td,{children:"packet One-way delay violation percentage (%) measured by each user"})]})]})]})]}),"\n",(0,s.jsxs)(t.details,{children:[(0,s.jsx)(t.summary,{children:"Network Environment/Policy"}),(0,s.jsx)(t.p,{children:"When the agent returns a action, the netaigym client utilizes the adapter to convert the action to policy, which will be applied to the netaigym environment."}),(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Environment"}),(0,s.jsx)(t.th,{children:"Policy"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:["nqos_split: ",(0,s.jsx)(t.a,{href:"/docs/examples/mx_traffic_splitting",children:"Multi-Access (MX) Traffic Splitting"})]}),(0,s.jsx)(t.td,{children:"Traffic Splitting"}),(0,s.jsx)(t.td,{children:"The agent updates traffic split ratio over Wi-Fi and LTE for each user"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:["qos_steer: ",(0,s.jsx)(t.a,{href:"/docs/examples/qos_aware_mx_traffic_steering",children:"QoS-aware MX Traffic Steering"})]}),(0,s.jsx)(t.td,{children:"Traffic Steering"}),(0,s.jsx)(t.td,{children:"The agent steers traffic over Wi-Fi or LTE for each user"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:["network_slicing: ",(0,s.jsx)(t.a,{href:"/docs/examples/cellular_ran_slicing",children:"Cellular RAN Slicing"})]}),(0,s.jsx)(t.td,{children:"Resource Allocation"}),(0,s.jsx)(t.td,{children:"The agent updates LTE resource block allocation ratio for a slice"})]})]})]})]})]})}t.default=(0,r.j)(l)}},function(e){e.O(0,[8928,9774,2888,179],function(){return e(e.s=2452)}),_N_E=e.O()}]);